{"version":3,"file":"cek-entry.js","names":["CEKEntry","columnEncryptionKeyValues","ordinal","databaseId","cekId","cekVersion","cekMdVersion","constructor","ordinalVal","Buffer","alloc","add","encryptedKey","dbId","keyId","keyVersion","mdVersion","keyPath","keyStoreName","algorithmName","encryptionKey","push","length","Error","exports"],"sources":["../../src/always-encrypted/cek-entry.ts"],"sourcesContent":["// This code is based on the `mssql-jdbc` library published under the conditions of MIT license.\n// Copyright (c) 2019 Microsoft Corporation\n\nimport { type EncryptionKeyInfo } from './types';\n\nexport class CEKEntry {\n  columnEncryptionKeyValues: EncryptionKeyInfo[];\n  ordinal: number;\n  databaseId: number;\n  cekId: number;\n  cekVersion: number;\n  cekMdVersion: Buffer;\n\n  constructor(ordinalVal: number) {\n    this.ordinal = ordinalVal;\n    this.databaseId = 0;\n    this.cekId = 0;\n    this.cekVersion = 0;\n    this.cekMdVersion = Buffer.alloc(0);\n    this.columnEncryptionKeyValues = [];\n  }\n\n  add(encryptedKey: Buffer, dbId: number, keyId: number, keyVersion: number, mdVersion: Buffer, keyPath: string, keyStoreName: string, algorithmName: string): void {\n    const encryptionKey: EncryptionKeyInfo = {\n      encryptedKey,\n      dbId,\n      keyId,\n      keyVersion,\n      mdVersion,\n      keyPath,\n      keyStoreName,\n      algorithmName,\n    };\n\n    this.columnEncryptionKeyValues.push(encryptionKey);\n\n    if (this.databaseId === 0) {\n      this.databaseId = dbId;\n      this.cekId = keyId;\n      this.cekVersion = keyVersion;\n      this.cekMdVersion = mdVersion;\n    } else if ((this.databaseId !== dbId) || (this.cekId !== keyId) || (this.cekVersion !== keyVersion) || !this.cekMdVersion || !mdVersion || this.cekMdVersion.length !== mdVersion.length) {\n      throw new Error('Invalid databaseId, cekId, cekVersion or cekMdVersion.');\n    }\n  }\n}\n"],"mappings":";;;;;;AAAA;AACA;;AAIO,MAAMA,QAAQ,CAAC;EACpBC,yBAAyB;EACzBC,OAAO;EACPC,UAAU;EACVC,KAAK;EACLC,UAAU;EACVC,YAAY;EAEZC,WAAWA,CAACC,UAAkB,EAAE;IAC9B,IAAI,CAACN,OAAO,GAAGM,UAAU;IACzB,IAAI,CAACL,UAAU,GAAG,CAAC;IACnB,IAAI,CAACC,KAAK,GAAG,CAAC;IACd,IAAI,CAACC,UAAU,GAAG,CAAC;IACnB,IAAI,CAACC,YAAY,GAAGG,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IACnC,IAAI,CAACT,yBAAyB,GAAG,EAAE;EACrC;EAEAU,GAAGA,CAACC,YAAoB,EAAEC,IAAY,EAAEC,KAAa,EAAEC,UAAkB,EAAEC,SAAiB,EAAEC,OAAe,EAAEC,YAAoB,EAAEC,aAAqB,EAAQ;IAChK,MAAMC,aAAgC,GAAG;MACvCR,YAAY;MACZC,IAAI;MACJC,KAAK;MACLC,UAAU;MACVC,SAAS;MACTC,OAAO;MACPC,YAAY;MACZC;IACF,CAAC;IAED,IAAI,CAAClB,yBAAyB,CAACoB,IAAI,CAACD,aAAa,CAAC;IAElD,IAAI,IAAI,CAACjB,UAAU,KAAK,CAAC,EAAE;MACzB,IAAI,CAACA,UAAU,GAAGU,IAAI;MACtB,IAAI,CAACT,KAAK,GAAGU,KAAK;MAClB,IAAI,CAACT,UAAU,GAAGU,UAAU;MAC5B,IAAI,CAACT,YAAY,GAAGU,SAAS;IAC/B,CAAC,MAAM,IAAK,IAAI,CAACb,UAAU,KAAKU,IAAI,IAAM,IAAI,CAACT,KAAK,KAAKU,KAAM,IAAK,IAAI,CAACT,UAAU,KAAKU,UAAW,IAAI,CAAC,IAAI,CAACT,YAAY,IAAI,CAACU,SAAS,IAAI,IAAI,CAACV,YAAY,CAACgB,MAAM,KAAKN,SAAS,CAACM,MAAM,EAAE;MACxL,MAAM,IAAIC,KAAK,CAAC,wDAAwD,CAAC;IAC3E;EACF;AACF;AAACC,OAAA,CAAAxB,QAAA,GAAAA,QAAA"}