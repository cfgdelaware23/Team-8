{"version":3,"file":"value-parser.js","names":["_metadataParser","require","_dataType","_iconvLite","_interopRequireDefault","_sprintfJs","_guidParser","obj","__esModule","default","NULL","MAX","THREE_AND_A_THIRD","MONEY_DIVISOR","PLP_NULL","Buffer","from","UNKNOWN_PLP_LEN","DEFAULT_ENCODING","readTinyInt","parser","callback","readUInt8","readSmallInt","readInt16LE","readInt","readInt32LE","readBigInt","readBigInt64LE","value","toString","readReal","readFloatLE","readFloat","readDoubleLE","readSmallMoney","readMoney","high","readUInt32LE","low","readBit","valueParse","metadata","options","type","name","dataLength","Error","codepage","collation","readMaxChars","readUInt16LE","readChars","readMaxNChars","readNChars","readMaxBinary","readBinary","textPointerLength","readBuffer","_textPointer","_timestamp","readSmallDateTime","useUTC","readDateTime","readTime","scale","readDate","readDateTime2","readDateTimeOffset","readNumeric","precision","readUniqueIdentifier","sprintf","readVariant","data","lowerCaseGuids","bufferToLowerCaseGuid","bufferToUpperCaseGuid","_precision","sign","readValue","readUNumeric64LE","readUNumeric96LE","readUNumeric128LE","call","Math","pow","baseType","TYPE","propBytes","_maxLength","readCollation","_collation","iconv","decode","readMax","equals","readMaxUnknownLength","console","warn","expectedLength","readMaxKnownLength","totalLength","alloc","offset","next","done","chunkLength","chunk","copy","chunks","length","push","concat","days","minutes","Date","UTC","threeHundredthsOfSecond","milliseconds","round","readUInt24LE","readUInt40LE","i","date","Object","defineProperty","enumerable","time","getHours","getMinutes","getSeconds","getMilliseconds","nanosecondsDelta","_default","exports","module"],"sources":["../src/value-parser.ts"],"sourcesContent":["import Parser, { type ParserOptions } from './token/stream-parser';\nimport { type Metadata, readCollation } from './metadata-parser';\nimport { TYPE } from './data-type';\n\nimport iconv from 'iconv-lite';\nimport { sprintf } from 'sprintf-js';\nimport { bufferToLowerCaseGuid, bufferToUpperCaseGuid } from './guid-parser';\n\nconst NULL = (1 << 16) - 1;\nconst MAX = (1 << 16) - 1;\nconst THREE_AND_A_THIRD = 3 + (1 / 3);\nconst MONEY_DIVISOR = 10000;\nconst PLP_NULL = Buffer.from([0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF]);\nconst UNKNOWN_PLP_LEN = Buffer.from([0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF]);\nconst DEFAULT_ENCODING = 'utf8';\n\nfunction readTinyInt(parser: Parser, callback: (value: unknown) => void) {\n  parser.readUInt8(callback);\n}\n\nfunction readSmallInt(parser: Parser, callback: (value: unknown) => void) {\n  parser.readInt16LE(callback);\n}\n\nfunction readInt(parser: Parser, callback: (value: unknown) => void) {\n  parser.readInt32LE(callback);\n}\n\nfunction readBigInt(parser: Parser, callback: (value: unknown) => void) {\n  parser.readBigInt64LE((value) => {\n    callback(value.toString());\n  });\n}\n\nfunction readReal(parser: Parser, callback: (value: unknown) => void) {\n  parser.readFloatLE(callback);\n}\n\nfunction readFloat(parser: Parser, callback: (value: unknown) => void) {\n  parser.readDoubleLE(callback);\n}\n\nfunction readSmallMoney(parser: Parser, callback: (value: unknown) => void) {\n  parser.readInt32LE((value) => {\n    callback(value / MONEY_DIVISOR);\n  });\n}\n\nfunction readMoney(parser: Parser, callback: (value: unknown) => void) {\n  parser.readInt32LE((high) => {\n    parser.readUInt32LE((low) => {\n      callback((low + (0x100000000 * high)) / MONEY_DIVISOR);\n    });\n  });\n}\n\nfunction readBit(parser: Parser, callback: (value: unknown) => void) {\n  parser.readUInt8((value) => {\n    callback(!!value);\n  });\n}\n\nfunction valueParse(parser: Parser, metadata: Metadata, options: ParserOptions, callback: (value: unknown) => void): void {\n  const type = metadata.type;\n\n  switch (type.name) {\n    case 'Null':\n      return callback(null);\n\n    case 'TinyInt':\n      return readTinyInt(parser, callback);\n\n    case 'SmallInt':\n      return readSmallInt(parser, callback);\n\n    case 'Int':\n      return readInt(parser, callback);\n\n    case 'BigInt':\n      return readBigInt(parser, callback);\n\n    case 'IntN':\n      return parser.readUInt8((dataLength) => {\n        switch (dataLength) {\n          case 0:\n            return callback(null);\n\n          case 1:\n            return readTinyInt(parser, callback);\n          case 2:\n            return readSmallInt(parser, callback);\n          case 4:\n            return readInt(parser, callback);\n          case 8:\n            return readBigInt(parser, callback);\n\n          default:\n            throw new Error('Unsupported dataLength ' + dataLength + ' for IntN');\n        }\n      });\n\n    case 'Real':\n      return readReal(parser, callback);\n\n    case 'Float':\n      return readFloat(parser, callback);\n\n    case 'FloatN':\n      return parser.readUInt8((dataLength) => {\n        switch (dataLength) {\n          case 0:\n            return callback(null);\n\n          case 4:\n            return readReal(parser, callback);\n          case 8:\n            return readFloat(parser, callback);\n\n          default:\n            throw new Error('Unsupported dataLength ' + dataLength + ' for FloatN');\n        }\n      });\n\n    case 'SmallMoney':\n      return readSmallMoney(parser, callback);\n\n    case 'Money':\n      return readMoney(parser, callback);\n\n    case 'MoneyN':\n      return parser.readUInt8((dataLength) => {\n        switch (dataLength) {\n          case 0:\n            return callback(null);\n\n          case 4:\n            return readSmallMoney(parser, callback);\n          case 8:\n            return readMoney(parser, callback);\n\n          default:\n            throw new Error('Unsupported dataLength ' + dataLength + ' for MoneyN');\n        }\n      });\n\n    case 'Bit':\n      return readBit(parser, callback);\n\n    case 'BitN':\n      return parser.readUInt8((dataLength) => {\n        switch (dataLength) {\n          case 0:\n            return callback(null);\n\n          case 1:\n            return readBit(parser, callback);\n\n          default:\n            throw new Error('Unsupported dataLength ' + dataLength + ' for BitN');\n        }\n      });\n\n    case 'VarChar':\n    case 'Char':\n      const codepage = metadata.collation!.codepage!;\n      if (metadata.dataLength === MAX) {\n        return readMaxChars(parser, codepage, callback);\n      } else {\n        return parser.readUInt16LE((dataLength) => {\n          if (dataLength === NULL) {\n            return callback(null);\n          }\n\n          readChars(parser, dataLength!, codepage, callback);\n        });\n      }\n\n    case 'NVarChar':\n    case 'NChar':\n      if (metadata.dataLength === MAX) {\n        return readMaxNChars(parser, callback);\n      } else {\n        return parser.readUInt16LE((dataLength) => {\n          if (dataLength === NULL) {\n            return callback(null);\n          }\n\n          readNChars(parser, dataLength!, callback);\n        });\n      }\n\n    case 'VarBinary':\n    case 'Binary':\n      if (metadata.dataLength === MAX) {\n        return readMaxBinary(parser, callback);\n      } else {\n        return parser.readUInt16LE((dataLength) => {\n          if (dataLength === NULL) {\n            return callback(null);\n          }\n\n          readBinary(parser, dataLength!, callback);\n        });\n      }\n\n    case 'Text':\n      return parser.readUInt8((textPointerLength) => {\n        if (textPointerLength === 0) {\n          return callback(null);\n        }\n\n        parser.readBuffer(textPointerLength, (_textPointer) => {\n          parser.readBuffer(8, (_timestamp) => {\n            parser.readUInt32LE((dataLength) => {\n              readChars(parser, dataLength!, metadata.collation!.codepage!, callback);\n            });\n          });\n        });\n      });\n\n    case 'NText':\n      return parser.readUInt8((textPointerLength) => {\n        if (textPointerLength === 0) {\n          return callback(null);\n        }\n\n        parser.readBuffer(textPointerLength, (_textPointer) => {\n          parser.readBuffer(8, (_timestamp) => {\n            parser.readUInt32LE((dataLength) => {\n              readNChars(parser, dataLength!, callback);\n            });\n          });\n        });\n      });\n\n    case 'Image':\n      return parser.readUInt8((textPointerLength) => {\n        if (textPointerLength === 0) {\n          return callback(null);\n        }\n\n        parser.readBuffer(textPointerLength, (_textPointer) => {\n          parser.readBuffer(8, (_timestamp) => {\n            parser.readUInt32LE((dataLength) => {\n              readBinary(parser, dataLength!, callback);\n            });\n          });\n        });\n      });\n\n    case 'Xml':\n      return readMaxNChars(parser, callback);\n\n    case 'SmallDateTime':\n      return readSmallDateTime(parser, options.useUTC, callback);\n\n    case 'DateTime':\n      return readDateTime(parser, options.useUTC, callback);\n\n    case 'DateTimeN':\n      return parser.readUInt8((dataLength) => {\n        switch (dataLength) {\n          case 0:\n            return callback(null);\n\n          case 4:\n            return readSmallDateTime(parser, options.useUTC, callback);\n          case 8:\n            return readDateTime(parser, options.useUTC, callback);\n\n          default:\n            throw new Error('Unsupported dataLength ' + dataLength + ' for DateTimeN');\n        }\n      });\n\n    case 'Time':\n      return parser.readUInt8((dataLength) => {\n        if (dataLength === 0) {\n          return callback(null);\n        } else {\n          return readTime(parser, dataLength!, metadata.scale!, options.useUTC, callback);\n        }\n      });\n\n    case 'Date':\n      return parser.readUInt8((dataLength) => {\n        if (dataLength === 0) {\n          return callback(null);\n        } else {\n          return readDate(parser, options.useUTC, callback);\n        }\n      });\n\n    case 'DateTime2':\n      return parser.readUInt8((dataLength) => {\n        if (dataLength === 0) {\n          return callback(null);\n        } else {\n          return readDateTime2(parser, dataLength!, metadata.scale!, options.useUTC, callback);\n        }\n      });\n\n    case 'DateTimeOffset':\n      return parser.readUInt8((dataLength) => {\n        if (dataLength === 0) {\n          return callback(null);\n        } else {\n          return readDateTimeOffset(parser, dataLength!, metadata.scale!, callback);\n        }\n      });\n\n    case 'NumericN':\n    case 'DecimalN':\n      return parser.readUInt8((dataLength) => {\n        if (dataLength === 0) {\n          return callback(null);\n        } else {\n          return readNumeric(parser, dataLength!, metadata.precision!, metadata.scale!, callback);\n        }\n      });\n\n    case 'UniqueIdentifier':\n      return parser.readUInt8((dataLength) => {\n        switch (dataLength) {\n          case 0:\n            return callback(null);\n\n          case 0x10:\n            return readUniqueIdentifier(parser, options, callback);\n\n          default:\n            throw new Error(sprintf('Unsupported guid size %d', dataLength! - 1));\n        }\n      });\n\n    case 'UDT':\n      return readMaxBinary(parser, callback);\n\n    case 'Variant':\n      return parser.readUInt32LE((dataLength) => {\n        if (dataLength === 0) {\n          return callback(null);\n        }\n\n        readVariant(parser, options, dataLength!, callback);\n      });\n\n    default:\n      throw new Error(sprintf('Unrecognised type %s', type.name));\n  }\n}\n\nfunction readUniqueIdentifier(parser: Parser, options: ParserOptions, callback: (value: unknown) => void) {\n  parser.readBuffer(0x10, (data) => {\n    callback(options.lowerCaseGuids ? bufferToLowerCaseGuid(data) : bufferToUpperCaseGuid(data));\n  });\n}\n\nfunction readNumeric(parser: Parser, dataLength: number, _precision: number, scale: number, callback: (value: unknown) => void) {\n  parser.readUInt8((sign) => {\n    sign = sign === 1 ? 1 : -1;\n\n    let readValue;\n    if (dataLength === 5) {\n      readValue = parser.readUInt32LE;\n    } else if (dataLength === 9) {\n      readValue = parser.readUNumeric64LE;\n    } else if (dataLength === 13) {\n      readValue = parser.readUNumeric96LE;\n    } else if (dataLength === 17) {\n      readValue = parser.readUNumeric128LE;\n    } else {\n      throw new Error(sprintf('Unsupported numeric dataLength %d', dataLength));\n    }\n\n    readValue.call(parser, (value) => {\n      callback((value * sign) / Math.pow(10, scale));\n    });\n  });\n}\n\nfunction readVariant(parser: Parser, options: ParserOptions, dataLength: number, callback: (value: unknown) => void) {\n  return parser.readUInt8((baseType) => {\n    const type = TYPE[baseType];\n\n    return parser.readUInt8((propBytes) => {\n      dataLength = dataLength - propBytes - 2;\n\n      switch (type.name) {\n        case 'UniqueIdentifier':\n          return readUniqueIdentifier(parser, options, callback);\n\n        case 'Bit':\n          return readBit(parser, callback);\n\n        case 'TinyInt':\n          return readTinyInt(parser, callback);\n\n        case 'SmallInt':\n          return readSmallInt(parser, callback);\n\n        case 'Int':\n          return readInt(parser, callback);\n\n        case 'BigInt':\n          return readBigInt(parser, callback);\n\n        case 'SmallDateTime':\n          return readSmallDateTime(parser, options.useUTC, callback);\n\n        case 'DateTime':\n          return readDateTime(parser, options.useUTC, callback);\n\n        case 'Real':\n          return readReal(parser, callback);\n\n        case 'Float':\n          return readFloat(parser, callback);\n\n        case 'SmallMoney':\n          return readSmallMoney(parser, callback);\n\n        case 'Money':\n          return readMoney(parser, callback);\n\n        case 'Date':\n          return readDate(parser, options.useUTC, callback);\n\n        case 'Time':\n          return parser.readUInt8((scale) => {\n            return readTime(parser, dataLength, scale, options.useUTC, callback);\n          });\n\n        case 'DateTime2':\n          return parser.readUInt8((scale) => {\n            return readDateTime2(parser, dataLength, scale, options.useUTC, callback);\n          });\n\n        case 'DateTimeOffset':\n          return parser.readUInt8((scale) => {\n            return readDateTimeOffset(parser, dataLength, scale, callback);\n          });\n\n        case 'VarBinary':\n        case 'Binary':\n          return parser.readUInt16LE((_maxLength) => {\n            readBinary(parser, dataLength, callback);\n          });\n\n        case 'NumericN':\n        case 'DecimalN':\n          return parser.readUInt8((precision) => {\n            parser.readUInt8((scale) => {\n              readNumeric(parser, dataLength, precision, scale, callback);\n            });\n          });\n\n        case 'VarChar':\n        case 'Char':\n          return parser.readUInt16LE((_maxLength) => {\n            readCollation(parser, (collation) => {\n              readChars(parser, dataLength, collation.codepage!, callback);\n            });\n          });\n\n        case 'NVarChar':\n        case 'NChar':\n          return parser.readUInt16LE((_maxLength) => {\n            readCollation(parser, (_collation) => {\n              readNChars(parser, dataLength, callback);\n            });\n          });\n\n        default:\n          throw new Error('Invalid type!');\n      }\n    });\n  });\n}\n\nfunction readBinary(parser: Parser, dataLength: number, callback: (value: unknown) => void) {\n  return parser.readBuffer(dataLength, callback);\n}\n\nfunction readChars(parser: Parser, dataLength: number, codepage: string, callback: (value: unknown) => void) {\n  if (codepage == null) {\n    codepage = DEFAULT_ENCODING;\n  }\n\n  return parser.readBuffer(dataLength, (data) => {\n    callback(iconv.decode(data, codepage));\n  });\n}\n\nfunction readNChars(parser: Parser, dataLength: number, callback: (value: unknown) => void) {\n  parser.readBuffer(dataLength, (data) => {\n    callback(data.toString('ucs2'));\n  });\n}\n\nfunction readMaxBinary(parser: Parser, callback: (value: unknown) => void) {\n  return readMax(parser, callback);\n}\n\nfunction readMaxChars(parser: Parser, codepage: string, callback: (value: unknown) => void) {\n  if (codepage == null) {\n    codepage = DEFAULT_ENCODING;\n  }\n\n  readMax(parser, (data) => {\n    if (data) {\n      callback(iconv.decode(data, codepage));\n    } else {\n      callback(null);\n    }\n  });\n}\n\nfunction readMaxNChars(parser: Parser, callback: (value: string | null) => void) {\n  readMax(parser, (data) => {\n    if (data) {\n      callback(data.toString('ucs2'));\n    } else {\n      callback(null);\n    }\n  });\n}\n\nfunction readMax(parser: Parser, callback: (value: null | Buffer) => void) {\n  parser.readBuffer(8, (type) => {\n    if (type.equals(PLP_NULL)) {\n      return callback(null);\n    } else if (type.equals(UNKNOWN_PLP_LEN)) {\n      return readMaxUnknownLength(parser, callback);\n    } else {\n      const low = type.readUInt32LE(0);\n      const high = type.readUInt32LE(4);\n\n      if (high >= (2 << (53 - 32))) {\n        console.warn('Read UInt64LE > 53 bits : high=' + high + ', low=' + low);\n      }\n\n      const expectedLength = low + (0x100000000 * high);\n      return readMaxKnownLength(parser, expectedLength, callback);\n    }\n  });\n}\n\nfunction readMaxKnownLength(parser: Parser, totalLength: number, callback: (value: null | Buffer) => void) {\n  const data = Buffer.alloc(totalLength, 0);\n\n  let offset = 0;\n  function next(done: any) {\n    parser.readUInt32LE((chunkLength) => {\n      if (!chunkLength) {\n        return done();\n      }\n\n      parser.readBuffer(chunkLength, (chunk) => {\n        chunk.copy(data, offset);\n        offset += chunkLength;\n\n        next(done);\n      });\n    });\n  }\n\n  next(() => {\n    if (offset !== totalLength) {\n      throw new Error('Partially Length-prefixed Bytes unmatched lengths : expected ' + totalLength + ', but got ' + offset + ' bytes');\n    }\n\n    callback(data);\n  });\n}\n\nfunction readMaxUnknownLength(parser: Parser, callback: (value: null | Buffer) => void) {\n  const chunks: Buffer[] = [];\n\n  let length = 0;\n  function next(done: any) {\n    parser.readUInt32LE((chunkLength) => {\n      if (!chunkLength) {\n        return done();\n      }\n\n      parser.readBuffer(chunkLength, (chunk) => {\n        chunks.push(chunk);\n        length += chunkLength;\n\n        next(done);\n      });\n    });\n  }\n\n  next(() => {\n    callback(Buffer.concat(chunks, length));\n  });\n}\n\nfunction readSmallDateTime(parser: Parser, useUTC: boolean, callback: (value: Date) => void) {\n  parser.readUInt16LE((days) => {\n    parser.readUInt16LE((minutes) => {\n      let value;\n      if (useUTC) {\n        value = new Date(Date.UTC(1900, 0, 1 + days, 0, minutes));\n      } else {\n        value = new Date(1900, 0, 1 + days, 0, minutes);\n      }\n      callback(value);\n    });\n  });\n}\n\nfunction readDateTime(parser: Parser, useUTC: boolean, callback: (value: Date) => void) {\n  parser.readInt32LE((days) => {\n    parser.readUInt32LE((threeHundredthsOfSecond) => {\n      const milliseconds = Math.round(threeHundredthsOfSecond * THREE_AND_A_THIRD);\n\n      let value;\n      if (useUTC) {\n        value = new Date(Date.UTC(1900, 0, 1 + days, 0, 0, 0, milliseconds));\n      } else {\n        value = new Date(1900, 0, 1 + days, 0, 0, 0, milliseconds);\n      }\n\n      callback(value);\n    });\n  });\n}\n\ninterface DateWithNanosecondsDelta extends Date {\n  nanosecondsDelta: number;\n}\n\nfunction readTime(parser: Parser, dataLength: number, scale: number, useUTC: boolean, callback: (value: DateWithNanosecondsDelta) => void) {\n  let readValue: any;\n  switch (dataLength) {\n    case 3:\n      readValue = parser.readUInt24LE;\n      break;\n    case 4:\n      readValue = parser.readUInt32LE;\n      break;\n    case 5:\n      readValue = parser.readUInt40LE;\n  }\n\n  readValue!.call(parser, (value: number) => {\n    if (scale < 7) {\n      for (let i = scale; i < 7; i++) {\n        value *= 10;\n      }\n    }\n\n    let date;\n    if (useUTC) {\n      date = new Date(Date.UTC(1970, 0, 1, 0, 0, 0, value / 10000)) as DateWithNanosecondsDelta;\n    } else {\n      date = new Date(1970, 0, 1, 0, 0, 0, value / 10000) as DateWithNanosecondsDelta;\n    }\n    Object.defineProperty(date, 'nanosecondsDelta', {\n      enumerable: false,\n      value: (value % 10000) / Math.pow(10, 7)\n    });\n    callback(date);\n  });\n}\n\nfunction readDate(parser: Parser, useUTC: boolean, callback: (value: Date) => void) {\n  parser.readUInt24LE((days) => {\n    if (useUTC) {\n      callback(new Date(Date.UTC(2000, 0, days - 730118)));\n    } else {\n      callback(new Date(2000, 0, days - 730118));\n    }\n  });\n}\n\nfunction readDateTime2(parser: Parser, dataLength: number, scale: number, useUTC: boolean, callback: (value: DateWithNanosecondsDelta) => void) {\n  readTime(parser, dataLength - 3, scale, useUTC, (time) => { // TODO: 'input' is 'time', but TypeScript cannot find \"time.nanosecondsDelta\";\n    parser.readUInt24LE((days) => {\n      let date;\n      if (useUTC) {\n        date = new Date(Date.UTC(2000, 0, days - 730118, 0, 0, 0, +time)) as DateWithNanosecondsDelta;\n      } else {\n        date = new Date(2000, 0, days - 730118, time.getHours(), time.getMinutes(), time.getSeconds(), time.getMilliseconds()) as DateWithNanosecondsDelta;\n      }\n      Object.defineProperty(date, 'nanosecondsDelta', {\n        enumerable: false,\n        value: time.nanosecondsDelta\n      });\n      callback(date);\n    });\n  });\n}\n\nfunction readDateTimeOffset(parser: Parser, dataLength: number, scale: number, callback: (value: DateWithNanosecondsDelta) => void) {\n  readTime(parser, dataLength - 5, scale, true, (time) => {\n    parser.readUInt24LE((days) => {\n      // offset\n      parser.readInt16LE(() => {\n        const date = new Date(Date.UTC(2000, 0, days - 730118, 0, 0, 0, +time)) as DateWithNanosecondsDelta;\n        Object.defineProperty(date, 'nanosecondsDelta', {\n          enumerable: false,\n          value: time.nanosecondsDelta\n        });\n        callback(date);\n      });\n    });\n  });\n}\n\nexport default valueParse;\nmodule.exports = valueParse;\n"],"mappings":"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"}