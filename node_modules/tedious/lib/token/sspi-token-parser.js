"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _token = require("./token");
function parseChallenge(buffer) {
  const challenge = {};
  challenge.magic = buffer.slice(0, 8).toString('utf8');
  challenge.type = buffer.readInt32LE(8);
  challenge.domainLen = buffer.readInt16LE(12);
  challenge.domainMax = buffer.readInt16LE(14);
  challenge.domainOffset = buffer.readInt32LE(16);
  challenge.flags = buffer.readInt32LE(20);
  challenge.nonce = buffer.slice(24, 32);
  challenge.zeroes = buffer.slice(32, 40);
  challenge.targetLen = buffer.readInt16LE(40);
  challenge.targetMax = buffer.readInt16LE(42);
  challenge.targetOffset = buffer.readInt32LE(44);
  challenge.oddData = buffer.slice(48, 56);
  challenge.domain = buffer.slice(56, 56 + challenge.domainLen).toString('ucs2');
  challenge.target = buffer.slice(56 + challenge.domainLen, 56 + challenge.domainLen + challenge.targetLen);
  return challenge;
}
function sspiParser(parser, _options, callback) {
  parser.readUsVarByte(buffer => {
    callback(new _token.SSPIToken(parseChallenge(buffer), buffer));
  });
}
var _default = sspiParser;
exports.default = _default;
module.exports = sspiParser;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfdG9rZW4iLCJyZXF1aXJlIiwicGFyc2VDaGFsbGVuZ2UiLCJidWZmZXIiLCJjaGFsbGVuZ2UiLCJtYWdpYyIsInNsaWNlIiwidG9TdHJpbmciLCJ0eXBlIiwicmVhZEludDMyTEUiLCJkb21haW5MZW4iLCJyZWFkSW50MTZMRSIsImRvbWFpbk1heCIsImRvbWFpbk9mZnNldCIsImZsYWdzIiwibm9uY2UiLCJ6ZXJvZXMiLCJ0YXJnZXRMZW4iLCJ0YXJnZXRNYXgiLCJ0YXJnZXRPZmZzZXQiLCJvZGREYXRhIiwiZG9tYWluIiwidGFyZ2V0Iiwic3NwaVBhcnNlciIsInBhcnNlciIsIl9vcHRpb25zIiwiY2FsbGJhY2siLCJyZWFkVXNWYXJCeXRlIiwiU1NQSVRva2VuIiwiX2RlZmF1bHQiLCJleHBvcnRzIiwiZGVmYXVsdCIsIm1vZHVsZSJdLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy90b2tlbi9zc3BpLXRva2VuLXBhcnNlci50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUGFyc2VyLCB7IHR5cGUgUGFyc2VyT3B0aW9ucyB9IGZyb20gJy4vc3RyZWFtLXBhcnNlcic7XG5cbmltcG9ydCB7IFNTUElUb2tlbiB9IGZyb20gJy4vdG9rZW4nO1xuXG5pbnRlcmZhY2UgRGF0YSB7XG4gIG1hZ2ljOiBzdHJpbmc7XG4gIHR5cGU6IG51bWJlcjtcbiAgZG9tYWluTGVuOiBudW1iZXI7XG4gIGRvbWFpbk1heDogbnVtYmVyO1xuICBkb21haW5PZmZzZXQ6IG51bWJlcjtcbiAgZmxhZ3M6IG51bWJlcjtcbiAgbm9uY2U6IEJ1ZmZlcjtcbiAgemVyb2VzOiBCdWZmZXI7XG4gIHRhcmdldExlbjogbnVtYmVyO1xuICB0YXJnZXRNYXg6IG51bWJlcjtcbiAgdGFyZ2V0T2Zmc2V0OiBudW1iZXI7XG4gIG9kZERhdGE6IEJ1ZmZlcjtcbiAgZG9tYWluOiBzdHJpbmc7XG4gIHRhcmdldDogQnVmZmVyO1xufVxuXG5mdW5jdGlvbiBwYXJzZUNoYWxsZW5nZShidWZmZXI6IEJ1ZmZlcikge1xuICBjb25zdCBjaGFsbGVuZ2U6IFBhcnRpYWw8RGF0YT4gPSB7fTtcblxuICBjaGFsbGVuZ2UubWFnaWMgPSBidWZmZXIuc2xpY2UoMCwgOCkudG9TdHJpbmcoJ3V0ZjgnKTtcbiAgY2hhbGxlbmdlLnR5cGUgPSBidWZmZXIucmVhZEludDMyTEUoOCk7XG4gIGNoYWxsZW5nZS5kb21haW5MZW4gPSBidWZmZXIucmVhZEludDE2TEUoMTIpO1xuICBjaGFsbGVuZ2UuZG9tYWluTWF4ID0gYnVmZmVyLnJlYWRJbnQxNkxFKDE0KTtcbiAgY2hhbGxlbmdlLmRvbWFpbk9mZnNldCA9IGJ1ZmZlci5yZWFkSW50MzJMRSgxNik7XG4gIGNoYWxsZW5nZS5mbGFncyA9IGJ1ZmZlci5yZWFkSW50MzJMRSgyMCk7XG4gIGNoYWxsZW5nZS5ub25jZSA9IGJ1ZmZlci5zbGljZSgyNCwgMzIpO1xuICBjaGFsbGVuZ2UuemVyb2VzID0gYnVmZmVyLnNsaWNlKDMyLCA0MCk7XG4gIGNoYWxsZW5nZS50YXJnZXRMZW4gPSBidWZmZXIucmVhZEludDE2TEUoNDApO1xuICBjaGFsbGVuZ2UudGFyZ2V0TWF4ID0gYnVmZmVyLnJlYWRJbnQxNkxFKDQyKTtcbiAgY2hhbGxlbmdlLnRhcmdldE9mZnNldCA9IGJ1ZmZlci5yZWFkSW50MzJMRSg0NCk7XG4gIGNoYWxsZW5nZS5vZGREYXRhID0gYnVmZmVyLnNsaWNlKDQ4LCA1Nik7XG4gIGNoYWxsZW5nZS5kb21haW4gPSBidWZmZXIuc2xpY2UoNTYsIDU2ICsgY2hhbGxlbmdlLmRvbWFpbkxlbikudG9TdHJpbmcoJ3VjczInKTtcbiAgY2hhbGxlbmdlLnRhcmdldCA9IGJ1ZmZlci5zbGljZSg1NiArIGNoYWxsZW5nZS5kb21haW5MZW4sIDU2ICsgY2hhbGxlbmdlLmRvbWFpbkxlbiArIGNoYWxsZW5nZS50YXJnZXRMZW4pO1xuXG4gIHJldHVybiBjaGFsbGVuZ2UgYXMgRGF0YTtcbn1cblxuZnVuY3Rpb24gc3NwaVBhcnNlcihwYXJzZXI6IFBhcnNlciwgX29wdGlvbnM6IFBhcnNlck9wdGlvbnMsIGNhbGxiYWNrOiAodG9rZW46IFNTUElUb2tlbikgPT4gdm9pZCkge1xuICBwYXJzZXIucmVhZFVzVmFyQnl0ZSgoYnVmZmVyKSA9PiB7XG4gICAgY2FsbGJhY2sobmV3IFNTUElUb2tlbihwYXJzZUNoYWxsZW5nZShidWZmZXIpLCBidWZmZXIpKTtcbiAgfSk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IHNzcGlQYXJzZXI7XG5tb2R1bGUuZXhwb3J0cyA9IHNzcGlQYXJzZXI7XG4iXSwibWFwcGluZ3MiOiI7Ozs7OztBQUVBLElBQUFBLE1BQUEsR0FBQUMsT0FBQTtBQW1CQSxTQUFTQyxjQUFjQSxDQUFDQyxNQUFjLEVBQUU7RUFDdEMsTUFBTUMsU0FBd0IsR0FBRyxDQUFDLENBQUM7RUFFbkNBLFNBQVMsQ0FBQ0MsS0FBSyxHQUFHRixNQUFNLENBQUNHLEtBQUssQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUNDLFFBQVEsQ0FBQyxNQUFNLENBQUM7RUFDckRILFNBQVMsQ0FBQ0ksSUFBSSxHQUFHTCxNQUFNLENBQUNNLFdBQVcsQ0FBQyxDQUFDLENBQUM7RUFDdENMLFNBQVMsQ0FBQ00sU0FBUyxHQUFHUCxNQUFNLENBQUNRLFdBQVcsQ0FBQyxFQUFFLENBQUM7RUFDNUNQLFNBQVMsQ0FBQ1EsU0FBUyxHQUFHVCxNQUFNLENBQUNRLFdBQVcsQ0FBQyxFQUFFLENBQUM7RUFDNUNQLFNBQVMsQ0FBQ1MsWUFBWSxHQUFHVixNQUFNLENBQUNNLFdBQVcsQ0FBQyxFQUFFLENBQUM7RUFDL0NMLFNBQVMsQ0FBQ1UsS0FBSyxHQUFHWCxNQUFNLENBQUNNLFdBQVcsQ0FBQyxFQUFFLENBQUM7RUFDeENMLFNBQVMsQ0FBQ1csS0FBSyxHQUFHWixNQUFNLENBQUNHLEtBQUssQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDO0VBQ3RDRixTQUFTLENBQUNZLE1BQU0sR0FBR2IsTUFBTSxDQUFDRyxLQUFLLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQztFQUN2Q0YsU0FBUyxDQUFDYSxTQUFTLEdBQUdkLE1BQU0sQ0FBQ1EsV0FBVyxDQUFDLEVBQUUsQ0FBQztFQUM1Q1AsU0FBUyxDQUFDYyxTQUFTLEdBQUdmLE1BQU0sQ0FBQ1EsV0FBVyxDQUFDLEVBQUUsQ0FBQztFQUM1Q1AsU0FBUyxDQUFDZSxZQUFZLEdBQUdoQixNQUFNLENBQUNNLFdBQVcsQ0FBQyxFQUFFLENBQUM7RUFDL0NMLFNBQVMsQ0FBQ2dCLE9BQU8sR0FBR2pCLE1BQU0sQ0FBQ0csS0FBSyxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUM7RUFDeENGLFNBQVMsQ0FBQ2lCLE1BQU0sR0FBR2xCLE1BQU0sQ0FBQ0csS0FBSyxDQUFDLEVBQUUsRUFBRSxFQUFFLEdBQUdGLFNBQVMsQ0FBQ00sU0FBUyxDQUFDLENBQUNILFFBQVEsQ0FBQyxNQUFNLENBQUM7RUFDOUVILFNBQVMsQ0FBQ2tCLE1BQU0sR0FBR25CLE1BQU0sQ0FBQ0csS0FBSyxDQUFDLEVBQUUsR0FBR0YsU0FBUyxDQUFDTSxTQUFTLEVBQUUsRUFBRSxHQUFHTixTQUFTLENBQUNNLFNBQVMsR0FBR04sU0FBUyxDQUFDYSxTQUFTLENBQUM7RUFFekcsT0FBT2IsU0FBUztBQUNsQjtBQUVBLFNBQVNtQixVQUFVQSxDQUFDQyxNQUFjLEVBQUVDLFFBQXVCLEVBQUVDLFFBQW9DLEVBQUU7RUFDakdGLE1BQU0sQ0FBQ0csYUFBYSxDQUFFeEIsTUFBTSxJQUFLO0lBQy9CdUIsUUFBUSxDQUFDLElBQUlFLGdCQUFTLENBQUMxQixjQUFjLENBQUNDLE1BQU0sQ0FBQyxFQUFFQSxNQUFNLENBQUMsQ0FBQztFQUN6RCxDQUFDLENBQUM7QUFDSjtBQUFDLElBQUEwQixRQUFBLEdBRWNOLFVBQVU7QUFBQU8sT0FBQSxDQUFBQyxPQUFBLEdBQUFGLFFBQUE7QUFDekJHLE1BQU0sQ0FBQ0YsT0FBTyxHQUFHUCxVQUFVIn0=