"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.errorParser = errorParser;
exports.infoParser = infoParser;
var _token = require("./token");
function parseToken(parser, options, callback) {
  // length
  parser.readUInt16LE(() => {
    parser.readUInt32LE(number => {
      parser.readUInt8(state => {
        parser.readUInt8(clazz => {
          parser.readUsVarChar(message => {
            parser.readBVarChar(serverName => {
              parser.readBVarChar(procName => {
                (options.tdsVersion < '7_2' ? parser.readUInt16LE : parser.readUInt32LE).call(parser, lineNumber => {
                  callback({
                    'number': number,
                    'state': state,
                    'class': clazz,
                    'message': message,
                    'serverName': serverName,
                    'procName': procName,
                    'lineNumber': lineNumber
                  });
                });
              });
            });
          });
        });
      });
    });
  });
}
function infoParser(parser, options, callback) {
  parseToken(parser, options, data => {
    callback(new _token.InfoMessageToken(data));
  });
}
function errorParser(parser, options, callback) {
  parseToken(parser, options, data => {
    callback(new _token.ErrorMessageToken(data));
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfdG9rZW4iLCJyZXF1aXJlIiwicGFyc2VUb2tlbiIsInBhcnNlciIsIm9wdGlvbnMiLCJjYWxsYmFjayIsInJlYWRVSW50MTZMRSIsInJlYWRVSW50MzJMRSIsIm51bWJlciIsInJlYWRVSW50OCIsInN0YXRlIiwiY2xhenoiLCJyZWFkVXNWYXJDaGFyIiwibWVzc2FnZSIsInJlYWRCVmFyQ2hhciIsInNlcnZlck5hbWUiLCJwcm9jTmFtZSIsInRkc1ZlcnNpb24iLCJjYWxsIiwibGluZU51bWJlciIsImluZm9QYXJzZXIiLCJkYXRhIiwiSW5mb01lc3NhZ2VUb2tlbiIsImVycm9yUGFyc2VyIiwiRXJyb3JNZXNzYWdlVG9rZW4iXSwic291cmNlcyI6WyIuLi8uLi9zcmMvdG9rZW4vaW5mb2Vycm9yLXRva2VuLXBhcnNlci50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUGFyc2VyLCB7IHR5cGUgUGFyc2VyT3B0aW9ucyB9IGZyb20gJy4vc3RyZWFtLXBhcnNlcic7XG5cbmltcG9ydCB7IEluZm9NZXNzYWdlVG9rZW4sIEVycm9yTWVzc2FnZVRva2VuIH0gZnJvbSAnLi90b2tlbic7XG5cbmludGVyZmFjZSBUb2tlbkRhdGEge1xuICBudW1iZXI6IG51bWJlcjtcbiAgc3RhdGU6IG51bWJlcjtcbiAgY2xhc3M6IG51bWJlcjtcbiAgbWVzc2FnZTogc3RyaW5nO1xuICBzZXJ2ZXJOYW1lOiBzdHJpbmc7XG4gIHByb2NOYW1lOiBzdHJpbmc7XG4gIGxpbmVOdW1iZXI6IG51bWJlcjtcbn1cblxuZnVuY3Rpb24gcGFyc2VUb2tlbihwYXJzZXI6IFBhcnNlciwgb3B0aW9uczogUGFyc2VyT3B0aW9ucywgY2FsbGJhY2s6IChkYXRhOiBUb2tlbkRhdGEpID0+IHZvaWQpIHtcbiAgLy8gbGVuZ3RoXG4gIHBhcnNlci5yZWFkVUludDE2TEUoKCkgPT4ge1xuICAgIHBhcnNlci5yZWFkVUludDMyTEUoKG51bWJlcikgPT4ge1xuICAgICAgcGFyc2VyLnJlYWRVSW50OCgoc3RhdGUpID0+IHtcbiAgICAgICAgcGFyc2VyLnJlYWRVSW50OCgoY2xhenopID0+IHtcbiAgICAgICAgICBwYXJzZXIucmVhZFVzVmFyQ2hhcigobWVzc2FnZSkgPT4ge1xuICAgICAgICAgICAgcGFyc2VyLnJlYWRCVmFyQ2hhcigoc2VydmVyTmFtZSkgPT4ge1xuICAgICAgICAgICAgICBwYXJzZXIucmVhZEJWYXJDaGFyKChwcm9jTmFtZSkgPT4ge1xuICAgICAgICAgICAgICAgIChvcHRpb25zLnRkc1ZlcnNpb24gPCAnN18yJyA/IHBhcnNlci5yZWFkVUludDE2TEUgOiBwYXJzZXIucmVhZFVJbnQzMkxFKS5jYWxsKHBhcnNlciwgKGxpbmVOdW1iZXI6IG51bWJlcikgPT4ge1xuICAgICAgICAgICAgICAgICAgY2FsbGJhY2soe1xuICAgICAgICAgICAgICAgICAgICAnbnVtYmVyJzogbnVtYmVyLFxuICAgICAgICAgICAgICAgICAgICAnc3RhdGUnOiBzdGF0ZSxcbiAgICAgICAgICAgICAgICAgICAgJ2NsYXNzJzogY2xhenosXG4gICAgICAgICAgICAgICAgICAgICdtZXNzYWdlJzogbWVzc2FnZSxcbiAgICAgICAgICAgICAgICAgICAgJ3NlcnZlck5hbWUnOiBzZXJ2ZXJOYW1lLFxuICAgICAgICAgICAgICAgICAgICAncHJvY05hbWUnOiBwcm9jTmFtZSxcbiAgICAgICAgICAgICAgICAgICAgJ2xpbmVOdW1iZXInOiBsaW5lTnVtYmVyXG4gICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpbmZvUGFyc2VyKHBhcnNlcjogUGFyc2VyLCBvcHRpb25zOiBQYXJzZXJPcHRpb25zLCBjYWxsYmFjazogKHRva2VuOiBJbmZvTWVzc2FnZVRva2VuKSA9PiB2b2lkKSB7XG4gIHBhcnNlVG9rZW4ocGFyc2VyLCBvcHRpb25zLCAoZGF0YSkgPT4ge1xuICAgIGNhbGxiYWNrKG5ldyBJbmZvTWVzc2FnZVRva2VuKGRhdGEpKTtcbiAgfSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBlcnJvclBhcnNlcihwYXJzZXI6IFBhcnNlciwgb3B0aW9uczogUGFyc2VyT3B0aW9ucywgY2FsbGJhY2s6ICh0b2tlbjogRXJyb3JNZXNzYWdlVG9rZW4pID0+IHZvaWQpIHtcbiAgcGFyc2VUb2tlbihwYXJzZXIsIG9wdGlvbnMsIChkYXRhKSA9PiB7XG4gICAgY2FsbGJhY2sobmV3IEVycm9yTWVzc2FnZVRva2VuKGRhdGEpKTtcbiAgfSk7XG59XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFFQSxJQUFBQSxNQUFBLEdBQUFDLE9BQUE7QUFZQSxTQUFTQyxVQUFVQSxDQUFDQyxNQUFjLEVBQUVDLE9BQXNCLEVBQUVDLFFBQW1DLEVBQUU7RUFDL0Y7RUFDQUYsTUFBTSxDQUFDRyxZQUFZLENBQUMsTUFBTTtJQUN4QkgsTUFBTSxDQUFDSSxZQUFZLENBQUVDLE1BQU0sSUFBSztNQUM5QkwsTUFBTSxDQUFDTSxTQUFTLENBQUVDLEtBQUssSUFBSztRQUMxQlAsTUFBTSxDQUFDTSxTQUFTLENBQUVFLEtBQUssSUFBSztVQUMxQlIsTUFBTSxDQUFDUyxhQUFhLENBQUVDLE9BQU8sSUFBSztZQUNoQ1YsTUFBTSxDQUFDVyxZQUFZLENBQUVDLFVBQVUsSUFBSztjQUNsQ1osTUFBTSxDQUFDVyxZQUFZLENBQUVFLFFBQVEsSUFBSztnQkFDaEMsQ0FBQ1osT0FBTyxDQUFDYSxVQUFVLEdBQUcsS0FBSyxHQUFHZCxNQUFNLENBQUNHLFlBQVksR0FBR0gsTUFBTSxDQUFDSSxZQUFZLEVBQUVXLElBQUksQ0FBQ2YsTUFBTSxFQUFHZ0IsVUFBa0IsSUFBSztrQkFDNUdkLFFBQVEsQ0FBQztvQkFDUCxRQUFRLEVBQUVHLE1BQU07b0JBQ2hCLE9BQU8sRUFBRUUsS0FBSztvQkFDZCxPQUFPLEVBQUVDLEtBQUs7b0JBQ2QsU0FBUyxFQUFFRSxPQUFPO29CQUNsQixZQUFZLEVBQUVFLFVBQVU7b0JBQ3hCLFVBQVUsRUFBRUMsUUFBUTtvQkFDcEIsWUFBWSxFQUFFRztrQkFDaEIsQ0FBQyxDQUFDO2dCQUNKLENBQUMsQ0FBQztjQUNKLENBQUMsQ0FBQztZQUNKLENBQUMsQ0FBQztVQUNKLENBQUMsQ0FBQztRQUNKLENBQUMsQ0FBQztNQUNKLENBQUMsQ0FBQztJQUNKLENBQUMsQ0FBQztFQUNKLENBQUMsQ0FBQztBQUNKO0FBRU8sU0FBU0MsVUFBVUEsQ0FBQ2pCLE1BQWMsRUFBRUMsT0FBc0IsRUFBRUMsUUFBMkMsRUFBRTtFQUM5R0gsVUFBVSxDQUFDQyxNQUFNLEVBQUVDLE9BQU8sRUFBR2lCLElBQUksSUFBSztJQUNwQ2hCLFFBQVEsQ0FBQyxJQUFJaUIsdUJBQWdCLENBQUNELElBQUksQ0FBQyxDQUFDO0VBQ3RDLENBQUMsQ0FBQztBQUNKO0FBRU8sU0FBU0UsV0FBV0EsQ0FBQ3BCLE1BQWMsRUFBRUMsT0FBc0IsRUFBRUMsUUFBNEMsRUFBRTtFQUNoSEgsVUFBVSxDQUFDQyxNQUFNLEVBQUVDLE9BQU8sRUFBR2lCLElBQUksSUFBSztJQUNwQ2hCLFFBQVEsQ0FBQyxJQUFJbUIsd0JBQWlCLENBQUNILElBQUksQ0FBQyxDQUFDO0VBQ3ZDLENBQUMsQ0FBQztBQUNKIn0=