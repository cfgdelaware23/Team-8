{"version":3,"file":"nbcrow-token-parser.js","names":["_token","require","_valueParser","_interopRequireDefault","obj","__esModule","default","nullHandler","_parser","_columnMetadata","_options","callback","nbcRowParser","parser","colMetadata","bitmapByteLength","Math","ceil","length","columns","bitmap","buffer","position","streamBuffer","waitForChunk","bytes","slice","i","len","byte","push","currColMetadata","value","valueParse","options","v","suspended","next","metadata","useColumnNames","columnsMap","forEach","column","colName","NBCRowToken","_default","exports","module"],"sources":["../../src/token/nbcrow-token-parser.ts"],"sourcesContent":["// s2.2.7.13 (introduced in TDS 7.3.B)\n\nimport Parser, { type ParserOptions } from './stream-parser';\nimport { type ColumnMetadata } from './colmetadata-token-parser';\n\nimport { NBCRowToken } from './token';\n\nimport valueParse from '../value-parser';\n\nfunction nullHandler(_parser: Parser, _columnMetadata: ColumnMetadata, _options: ParserOptions, callback: (value: unknown) => void) {\n  callback(null);\n}\n\ninterface Column {\n  value: unknown;\n  metadata: ColumnMetadata;\n}\n\nasync function nbcRowParser(parser: Parser): Promise<NBCRowToken> {\n  const colMetadata = parser.colMetadata;\n  const bitmapByteLength = Math.ceil(colMetadata.length / 8);\n  const columns: Column[] = [];\n  const bitmap: boolean[] = [];\n\n  while (parser.buffer.length - parser.position < bitmapByteLength) {\n    await parser.streamBuffer.waitForChunk();\n  }\n\n  const bytes = parser.buffer.slice(parser.position, parser.position + bitmapByteLength);\n  parser.position += bitmapByteLength;\n\n  for (let i = 0, len = bytes.length; i < len; i++) {\n    const byte = bytes[i];\n\n    bitmap.push(byte & 0b1 ? true : false);\n    bitmap.push(byte & 0b10 ? true : false);\n    bitmap.push(byte & 0b100 ? true : false);\n    bitmap.push(byte & 0b1000 ? true : false);\n    bitmap.push(byte & 0b10000 ? true : false);\n    bitmap.push(byte & 0b100000 ? true : false);\n    bitmap.push(byte & 0b1000000 ? true : false);\n    bitmap.push(byte & 0b10000000 ? true : false);\n  }\n\n  for (let i = 0; i < colMetadata.length; i++) {\n    const currColMetadata = colMetadata[i];\n    let value;\n    (bitmap[i] ? nullHandler : valueParse)(parser, currColMetadata, parser.options, (v) => {\n      value = v;\n    });\n\n    while (parser.suspended) {\n      await parser.streamBuffer.waitForChunk();\n\n      parser.suspended = false;\n      const next = parser.next!;\n\n      next();\n    }\n    columns.push({\n      value,\n      metadata: currColMetadata\n    });\n  }\n\n  if (parser.options.useColumnNames) {\n    const columnsMap: { [key: string]: Column } = {};\n\n    columns.forEach((column) => {\n      const colName = column.metadata.colName;\n      if (columnsMap[colName] == null) {\n        columnsMap[colName] = column;\n      }\n    });\n\n    return new NBCRowToken(columnsMap);\n  } else {\n    return new NBCRowToken(columns);\n  }\n}\n\nexport default nbcRowParser;\nmodule.exports = nbcRowParser;\n"],"mappings":"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"}